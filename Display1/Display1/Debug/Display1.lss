
Display1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  0000055a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00802000  00802000  0000055a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000055a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000058c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000005cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004926  00000000  00000000  00000694  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002a8d  00000000  00000000  00004fba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010bb  00000000  00000000  00007a47  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f4  00000000  00000000  00008b04  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001f59  00000000  00000000  00008df8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001895  00000000  00000000  0000ad51  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  0000c5e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 ff 00 	jmp	0x1fe	; 0x1fe <__ctors_end>
   4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
   8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
   c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  10:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  14:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  18:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  1c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  20:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  24:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  28:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  2c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  30:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  34:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  38:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  3c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  40:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  44:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  48:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  4c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  50:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  54:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  58:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  5c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  60:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  64:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  68:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  6c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  70:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  74:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  78:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  7c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  80:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  84:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  88:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  8c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  90:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  94:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  98:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  9c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  a0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  a4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  a8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  ac:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  b0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  b4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  b8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  bc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  c0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  c4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  c8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  cc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  d0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  d4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  d8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  dc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  e0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  e4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  e8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  ec:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  f0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  f4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  f8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  fc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 100:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 104:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 108:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 10c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 110:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 114:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 118:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 11c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 120:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 124:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 128:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 12c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 130:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 134:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 138:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 13c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 140:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 144:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 148:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 14c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 150:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 154:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 158:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 15c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 160:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 164:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 168:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 16c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 170:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 174:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 178:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 17c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 180:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 184:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 188:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 18c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 190:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 194:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 198:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 19c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1a0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1a4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1a8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1ac:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1b0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1b4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1b8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1bc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1c0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1c4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1c8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1cc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1d0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1d4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1d8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1dc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1e0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1e4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1e8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1ec:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1f0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1f4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1f8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>

000001fc <__ctors_start>:
 1fc:	64 02       	muls	r22, r20

000001fe <__ctors_end>:
 1fe:	11 24       	eor	r1, r1
 200:	1f be       	out	0x3f, r1	; 63
 202:	cf ef       	ldi	r28, 0xFF	; 255
 204:	cd bf       	out	0x3d, r28	; 61
 206:	d7 e2       	ldi	r29, 0x27	; 39
 208:	de bf       	out	0x3e, r29	; 62

0000020a <__do_copy_data>:
 20a:	10 e2       	ldi	r17, 0x20	; 32
 20c:	a0 e0       	ldi	r26, 0x00	; 0
 20e:	b0 e2       	ldi	r27, 0x20	; 32
 210:	e6 ee       	ldi	r30, 0xE6	; 230
 212:	f4 e0       	ldi	r31, 0x04	; 4
 214:	02 c0       	rjmp	.+4      	; 0x21a <__do_copy_data+0x10>
 216:	05 90       	lpm	r0, Z+
 218:	0d 92       	st	X+, r0
 21a:	a0 30       	cpi	r26, 0x00	; 0
 21c:	b1 07       	cpc	r27, r17
 21e:	d9 f7       	brne	.-10     	; 0x216 <__do_copy_data+0xc>

00000220 <__do_clear_bss>:
 220:	20 e2       	ldi	r18, 0x20	; 32
 222:	a0 e0       	ldi	r26, 0x00	; 0
 224:	b0 e2       	ldi	r27, 0x20	; 32
 226:	01 c0       	rjmp	.+2      	; 0x22a <.do_clear_bss_start>

00000228 <.do_clear_bss_loop>:
 228:	1d 92       	st	X+, r1

0000022a <.do_clear_bss_start>:
 22a:	a1 30       	cpi	r26, 0x01	; 1
 22c:	b2 07       	cpc	r27, r18
 22e:	e1 f7       	brne	.-8      	; 0x228 <.do_clear_bss_loop>

00000230 <__do_global_ctors>:
 230:	10 e0       	ldi	r17, 0x00	; 0
 232:	cf ef       	ldi	r28, 0xFF	; 255
 234:	d0 e0       	ldi	r29, 0x00	; 0
 236:	04 c0       	rjmp	.+8      	; 0x240 <__do_global_ctors+0x10>
 238:	21 97       	sbiw	r28, 0x01	; 1
 23a:	fe 01       	movw	r30, r28
 23c:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__tablejump2__>
 240:	ce 3f       	cpi	r28, 0xFE	; 254
 242:	d1 07       	cpc	r29, r17
 244:	c9 f7       	brne	.-14     	; 0x238 <__do_global_ctors+0x8>
 246:	0e 94 39 02 	call	0x472	; 0x472 <main>
 24a:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <_exit>

0000024e <__bad_interrupt>:
 24e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000252 <_ZN7HD4478011_PORTA_OUT_Eh>:
	for (uint8_t i = 0; i < 8; i++)
	{
		Send_Data(*(symbol + i));
	}
	Send_Cmd(0x80);
}
 252:	8f ef       	ldi	r24, 0xFF	; 255
 254:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x7fb606>
 258:	21 e0       	ldi	r18, 0x01	; 1
 25a:	80 e8       	ldi	r24, 0x80	; 128
 25c:	88 23       	and	r24, r24
 25e:	51 f0       	breq	.+20     	; 0x274 <_ZN7HD4478011_PORTA_OUT_Eh+0x22>
 260:	92 2f       	mov	r25, r18
 262:	96 23       	and	r25, r22
 264:	11 f0       	breq	.+4      	; 0x26a <_ZN7HD4478011_PORTA_OUT_Eh+0x18>
 266:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x7fb605>
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	95 95       	asr	r25
 26e:	87 95       	ror	r24
 270:	22 0f       	add	r18, r18
 272:	f4 cf       	rjmp	.-24     	; 0x25c <_ZN7HD4478011_PORTA_OUT_Eh+0xa>
 274:	08 95       	ret

00000276 <_ZN7HD447808Send_CmdEh>:
 276:	cf 93       	push	r28
 278:	df 93       	push	r29
 27a:	c6 e2       	ldi	r28, 0x26	; 38
 27c:	d6 e0       	ldi	r29, 0x06	; 6
 27e:	21 e0       	ldi	r18, 0x01	; 1
 280:	28 83       	st	Y, r18
 282:	0e 94 29 01 	call	0x252	; 0x252 <_ZN7HD4478011_PORTA_OUT_Eh>
 286:	86 e0       	ldi	r24, 0x06	; 6
 288:	8a 95       	dec	r24
 28a:	f1 f7       	brne	.-4      	; 0x288 <_ZN7HD447808Send_CmdEh+0x12>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <_ZN7HD447808Send_CmdEh+0x18>
 28e:	82 e0       	ldi	r24, 0x02	; 2
 290:	80 93 25 06 	sts	0x0625, r24	; 0x800625 <__TEXT_REGION_LENGTH__+0x7fb625>
 294:	96 e0       	ldi	r25, 0x06	; 6
 296:	9a 95       	dec	r25
 298:	f1 f7       	brne	.-4      	; 0x296 <_ZN7HD447808Send_CmdEh+0x20>
 29a:	00 c0       	rjmp	.+0      	; 0x29c <_ZN7HD447808Send_CmdEh+0x26>
 29c:	88 83       	st	Y, r24
 29e:	86 e0       	ldi	r24, 0x06	; 6
 2a0:	8a 95       	dec	r24
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <_ZN7HD447808Send_CmdEh+0x2a>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <_ZN7HD447808Send_CmdEh+0x30>
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	08 95       	ret

000002ac <_ZN7HD44780C1Ev>:
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	ec 01       	movw	r28, r24
 2b2:	8f ef       	ldi	r24, 0xFF	; 255
 2b4:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7fb600>
 2b8:	80 93 20 06 	sts	0x0620, r24	; 0x800620 <__TEXT_REGION_LENGTH__+0x7fb620>
 2bc:	8f e4       	ldi	r24, 0x4F	; 79
 2be:	93 ec       	ldi	r25, 0xC3	; 195
 2c0:	01 97       	sbiw	r24, 0x01	; 1
 2c2:	f1 f7       	brne	.-4      	; 0x2c0 <_ZN7HD44780C1Ev+0x14>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <_ZN7HD44780C1Ev+0x1a>
 2c6:	00 00       	nop
 2c8:	68 e3       	ldi	r22, 0x38	; 56
 2ca:	ce 01       	movw	r24, r28
 2cc:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 2d0:	83 ec       	ldi	r24, 0xC3	; 195
 2d2:	99 e0       	ldi	r25, 0x09	; 9
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <_ZN7HD44780C1Ev+0x28>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <_ZN7HD44780C1Ev+0x2e>
 2da:	00 00       	nop
 2dc:	68 e3       	ldi	r22, 0x38	; 56
 2de:	ce 01       	movw	r24, r28
 2e0:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 2e4:	99 e4       	ldi	r25, 0x49	; 73
 2e6:	9a 95       	dec	r25
 2e8:	f1 f7       	brne	.-4      	; 0x2e6 <_ZN7HD44780C1Ev+0x3a>
 2ea:	00 00       	nop
 2ec:	68 e3       	ldi	r22, 0x38	; 56
 2ee:	ce 01       	movw	r24, r28
 2f0:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 2f4:	81 e2       	ldi	r24, 0x21	; 33
 2f6:	8a 95       	dec	r24
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <_ZN7HD44780C1Ev+0x4a>
 2fa:	00 00       	nop
 2fc:	68 e3       	ldi	r22, 0x38	; 56
 2fe:	ce 01       	movw	r24, r28
 300:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 304:	91 e2       	ldi	r25, 0x21	; 33
 306:	9a 95       	dec	r25
 308:	f1 f7       	brne	.-4      	; 0x306 <_ZN7HD44780C1Ev+0x5a>
 30a:	00 00       	nop
 30c:	68 e0       	ldi	r22, 0x08	; 8
 30e:	ce 01       	movw	r24, r28
 310:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 314:	81 e2       	ldi	r24, 0x21	; 33
 316:	8a 95       	dec	r24
 318:	f1 f7       	brne	.-4      	; 0x316 <_ZN7HD44780C1Ev+0x6a>
 31a:	00 00       	nop
 31c:	61 e0       	ldi	r22, 0x01	; 1
 31e:	ce 01       	movw	r24, r28
 320:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 324:	87 ee       	ldi	r24, 0xE7	; 231
 326:	93 e0       	ldi	r25, 0x03	; 3
 328:	01 97       	sbiw	r24, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <_ZN7HD44780C1Ev+0x7c>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <_ZN7HD44780C1Ev+0x82>
 32e:	00 00       	nop
 330:	66 e0       	ldi	r22, 0x06	; 6
 332:	ce 01       	movw	r24, r28
 334:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 338:	91 e2       	ldi	r25, 0x21	; 33
 33a:	9a 95       	dec	r25
 33c:	f1 f7       	brne	.-4      	; 0x33a <_ZN7HD44780C1Ev+0x8e>
 33e:	00 00       	nop
 340:	62 e0       	ldi	r22, 0x02	; 2
 342:	ce 01       	movw	r24, r28
 344:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 348:	87 ee       	ldi	r24, 0xE7	; 231
 34a:	93 e0       	ldi	r25, 0x03	; 3
 34c:	01 97       	sbiw	r24, 0x01	; 1
 34e:	f1 f7       	brne	.-4      	; 0x34c <_ZN7HD44780C1Ev+0xa0>
 350:	00 c0       	rjmp	.+0      	; 0x352 <_ZN7HD44780C1Ev+0xa6>
 352:	00 00       	nop
 354:	6f e0       	ldi	r22, 0x0F	; 15
 356:	ce 01       	movw	r24, r28
 358:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 35c:	91 e2       	ldi	r25, 0x21	; 33
 35e:	9a 95       	dec	r25
 360:	f1 f7       	brne	.-4      	; 0x35e <_ZN7HD44780C1Ev+0xb2>
 362:	00 00       	nop
 364:	df 91       	pop	r29
 366:	cf 91       	pop	r28
 368:	08 95       	ret

0000036a <_ZN7HD447809Send_DataEh>:
 36a:	cf 93       	push	r28
 36c:	df 93       	push	r29
 36e:	c5 e2       	ldi	r28, 0x25	; 37
 370:	d6 e0       	ldi	r29, 0x06	; 6
 372:	21 e0       	ldi	r18, 0x01	; 1
 374:	28 83       	st	Y, r18
 376:	0e 94 29 01 	call	0x252	; 0x252 <_ZN7HD4478011_PORTA_OUT_Eh>
 37a:	86 e0       	ldi	r24, 0x06	; 6
 37c:	8a 95       	dec	r24
 37e:	f1 f7       	brne	.-4      	; 0x37c <_ZN7HD447809Send_DataEh+0x12>
 380:	00 c0       	rjmp	.+0      	; 0x382 <_ZN7HD447809Send_DataEh+0x18>
 382:	82 e0       	ldi	r24, 0x02	; 2
 384:	88 83       	st	Y, r24
 386:	96 e0       	ldi	r25, 0x06	; 6
 388:	9a 95       	dec	r25
 38a:	f1 f7       	brne	.-4      	; 0x388 <_ZN7HD447809Send_DataEh+0x1e>
 38c:	00 c0       	rjmp	.+0      	; 0x38e <_ZN7HD447809Send_DataEh+0x24>
 38e:	80 93 26 06 	sts	0x0626, r24	; 0x800626 <__TEXT_REGION_LENGTH__+0x7fb626>
 392:	86 e0       	ldi	r24, 0x06	; 6
 394:	8a 95       	dec	r24
 396:	f1 f7       	brne	.-4      	; 0x394 <_ZN7HD447809Send_DataEh+0x2a>
 398:	00 c0       	rjmp	.+0      	; 0x39a <_ZN7HD447809Send_DataEh+0x30>
 39a:	df 91       	pop	r29
 39c:	cf 91       	pop	r28
 39e:	08 95       	ret

000003a0 <_ZN7HD4478013Clear_DisplayEv>:
 3a0:	61 e0       	ldi	r22, 0x01	; 1
 3a2:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 3a6:	87 ee       	ldi	r24, 0xE7	; 231
 3a8:	93 e0       	ldi	r25, 0x03	; 3
 3aa:	01 97       	sbiw	r24, 0x01	; 1
 3ac:	f1 f7       	brne	.-4      	; 0x3aa <_ZN7HD4478013Clear_DisplayEv+0xa>
 3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <_ZN7HD4478013Clear_DisplayEv+0x10>
 3b0:	00 00       	nop
 3b2:	08 95       	ret

000003b4 <_ZN7HD447808Send_HexEPhh>:

void HD44780::Send_Hex(uint8_t* hex, uint8_t bytes)
{
 3b4:	ef 92       	push	r14
 3b6:	ff 92       	push	r15
 3b8:	0f 93       	push	r16
 3ba:	1f 93       	push	r17
 3bc:	cf 93       	push	r28
 3be:	df 93       	push	r29
 3c0:	cd b7       	in	r28, 0x3d	; 61
 3c2:	de b7       	in	r29, 0x3e	; 62
 3c4:	60 97       	sbiw	r28, 0x10	; 16
 3c6:	cd bf       	out	0x3d, r28	; 61
 3c8:	de bf       	out	0x3e, r29	; 62
 3ca:	7c 01       	movw	r14, r24
	uint8_t ch[16];
	
	for(int i = 0; i < bytes ; i++)
 3cc:	20 e0       	ldi	r18, 0x00	; 0
 3ce:	30 e0       	ldi	r19, 0x00	; 0
 3d0:	04 2f       	mov	r16, r20
 3d2:	10 e0       	ldi	r17, 0x00	; 0
 3d4:	20 17       	cp	r18, r16
 3d6:	31 07       	cpc	r19, r17
 3d8:	ec f4       	brge	.+58     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
	{
		ch[i*2] = *(hex + i) % 16;
 3da:	c9 01       	movw	r24, r18
 3dc:	88 0f       	add	r24, r24
 3de:	99 1f       	adc	r25, r25
 3e0:	fb 01       	movw	r30, r22
 3e2:	e2 0f       	add	r30, r18
 3e4:	f3 1f       	adc	r31, r19
 3e6:	50 81       	ld	r21, Z
 3e8:	e1 e0       	ldi	r30, 0x01	; 1
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	ec 0f       	add	r30, r28
 3ee:	fd 1f       	adc	r31, r29
 3f0:	e8 0f       	add	r30, r24
 3f2:	f9 1f       	adc	r31, r25
 3f4:	a5 2f       	mov	r26, r21
 3f6:	af 70       	andi	r26, 0x0F	; 15
 3f8:	a0 83       	st	Z, r26
		ch[i*2+1] =  *(hex + i) / 16;
 3fa:	01 96       	adiw	r24, 0x01	; 1
 3fc:	e1 e0       	ldi	r30, 0x01	; 1
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	ec 0f       	add	r30, r28
 402:	fd 1f       	adc	r31, r29
 404:	e8 0f       	add	r30, r24
 406:	f9 1f       	adc	r31, r25
 408:	52 95       	swap	r21
 40a:	5f 70       	andi	r21, 0x0F	; 15
 40c:	50 83       	st	Z, r21

void HD44780::Send_Hex(uint8_t* hex, uint8_t bytes)
{
	uint8_t ch[16];
	
	for(int i = 0; i < bytes ; i++)
 40e:	2f 5f       	subi	r18, 0xFF	; 255
 410:	3f 4f       	sbci	r19, 0xFF	; 255
 412:	de cf       	rjmp	.-68     	; 0x3d0 <_ZN7HD447808Send_HexEPhh+0x1c>
	{
		ch[i*2] = *(hex + i) % 16;
		ch[i*2+1] =  *(hex + i) / 16;
	}
	
	for(int i = bytes * 2 - 1; i >= 0; i--)
 414:	00 0f       	add	r16, r16
 416:	11 1f       	adc	r17, r17
 418:	01 50       	subi	r16, 0x01	; 1
 41a:	11 09       	sbc	r17, r1
 41c:	11 23       	and	r17, r17
 41e:	ac f0       	brlt	.+42     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
	{
		if(ch[i] < 10) Send_Data(ch[i] + 0x30);
 420:	e1 e0       	ldi	r30, 0x01	; 1
 422:	f0 e0       	ldi	r31, 0x00	; 0
 424:	ec 0f       	add	r30, r28
 426:	fd 1f       	adc	r31, r29
 428:	e0 0f       	add	r30, r16
 42a:	f1 1f       	adc	r31, r17
 42c:	60 81       	ld	r22, Z
 42e:	6a 30       	cpi	r22, 0x0A	; 10
 430:	28 f4       	brcc	.+10     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 432:	60 5d       	subi	r22, 0xD0	; 208
 434:	c7 01       	movw	r24, r14
 436:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN7HD447809Send_DataEh>
 43a:	04 c0       	rjmp	.+8      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
		else Send_Data(ch[i] + 0x37);
 43c:	69 5c       	subi	r22, 0xC9	; 201
 43e:	c7 01       	movw	r24, r14
 440:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN7HD447809Send_DataEh>
	{
		ch[i*2] = *(hex + i) % 16;
		ch[i*2+1] =  *(hex + i) / 16;
	}
	
	for(int i = bytes * 2 - 1; i >= 0; i--)
 444:	01 50       	subi	r16, 0x01	; 1
 446:	11 09       	sbc	r17, r1
 448:	e9 cf       	rjmp	.-46     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
	{
		if(ch[i] < 10) Send_Data(ch[i] + 0x30);
		else Send_Data(ch[i] + 0x37);
	}
}
 44a:	60 96       	adiw	r28, 0x10	; 16
 44c:	cd bf       	out	0x3d, r28	; 61
 44e:	de bf       	out	0x3e, r29	; 62
 450:	df 91       	pop	r29
 452:	cf 91       	pop	r28
 454:	1f 91       	pop	r17
 456:	0f 91       	pop	r16
 458:	ff 90       	pop	r15
 45a:	ef 90       	pop	r14
 45c:	08 95       	ret

0000045e <_Z41__static_initialization_and_destruction_0ii>:
		hex_num++;
		_delay_ms(500);
		FirstDisplay.Clear_Display();
	}

 45e:	01 97       	sbiw	r24, 0x01	; 1
 460:	39 f4       	brne	.+14     	; 0x470 <_Z41__static_initialization_and_destruction_0ii+0x12>
 462:	6f 3f       	cpi	r22, 0xFF	; 255
 464:	7f 4f       	sbci	r23, 0xFF	; 255
 466:	21 f4       	brne	.+8      	; 0x470 <_Z41__static_initialization_and_destruction_0ii+0x12>
 */ 

#include <avr/io.h>
#include "HD44780.h"

HD44780 FirstDisplay; 
 468:	80 e0       	ldi	r24, 0x00	; 0
 46a:	90 e2       	ldi	r25, 0x20	; 32
 46c:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN7HD44780C1Ev>
 470:	08 95       	ret

00000472 <main>:
	0b00000,
	0b00000,
};

int main(void)
{
 472:	cf 93       	push	r28
 474:	df 93       	push	r29
 476:	00 d0       	rcall	.+0      	; 0x478 <main+0x6>
 478:	00 d0       	rcall	.+0      	; 0x47a <main+0x8>
 47a:	cd b7       	in	r28, 0x3d	; 61
 47c:	de b7       	in	r29, 0x3e	; 62
	uint32_t hex_num = 0;
 47e:	19 82       	std	Y+1, r1	; 0x01
 480:	1a 82       	std	Y+2, r1	; 0x02
 482:	1b 82       	std	Y+3, r1	; 0x03
 484:	1c 82       	std	Y+4, r1	; 0x04
	while (1)
	{
		FirstDisplay.Send_Hex(reinterpret_cast<uint8_t*>(&hex_num), 4);
 486:	44 e0       	ldi	r20, 0x04	; 4
 488:	be 01       	movw	r22, r28
 48a:	6f 5f       	subi	r22, 0xFF	; 255
 48c:	7f 4f       	sbci	r23, 0xFF	; 255
 48e:	80 e0       	ldi	r24, 0x00	; 0
 490:	90 e2       	ldi	r25, 0x20	; 32
 492:	0e 94 da 01 	call	0x3b4	; 0x3b4 <_ZN7HD447808Send_HexEPhh>
		hex_num++;
 496:	89 81       	ldd	r24, Y+1	; 0x01
 498:	9a 81       	ldd	r25, Y+2	; 0x02
 49a:	ab 81       	ldd	r26, Y+3	; 0x03
 49c:	bc 81       	ldd	r27, Y+4	; 0x04
 49e:	01 96       	adiw	r24, 0x01	; 1
 4a0:	a1 1d       	adc	r26, r1
 4a2:	b1 1d       	adc	r27, r1
 4a4:	89 83       	std	Y+1, r24	; 0x01
 4a6:	9a 83       	std	Y+2, r25	; 0x02
 4a8:	ab 83       	std	Y+3, r26	; 0x03
 4aa:	bc 83       	std	Y+4, r27	; 0x04
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4ac:	2f e3       	ldi	r18, 0x3F	; 63
 4ae:	8d e0       	ldi	r24, 0x0D	; 13
 4b0:	93 e0       	ldi	r25, 0x03	; 3
 4b2:	21 50       	subi	r18, 0x01	; 1
 4b4:	80 40       	sbci	r24, 0x00	; 0
 4b6:	90 40       	sbci	r25, 0x00	; 0
 4b8:	e1 f7       	brne	.-8      	; 0x4b2 <main+0x40>
 4ba:	00 c0       	rjmp	.+0      	; 0x4bc <main+0x4a>
 4bc:	00 00       	nop
		_delay_ms(500);
		FirstDisplay.Clear_Display();
 4be:	80 e0       	ldi	r24, 0x00	; 0
 4c0:	90 e2       	ldi	r25, 0x20	; 32
 4c2:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <_ZN7HD4478013Clear_DisplayEv>
 4c6:	df cf       	rjmp	.-66     	; 0x486 <main+0x14>

000004c8 <_GLOBAL__sub_I_FirstDisplay>:
	}

 4c8:	6f ef       	ldi	r22, 0xFF	; 255
 4ca:	7f ef       	ldi	r23, 0xFF	; 255
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	0e 94 2f 02 	call	0x45e	; 0x45e <_Z41__static_initialization_and_destruction_0ii>
 4d4:	08 95       	ret

000004d6 <__tablejump2__>:
 4d6:	ee 0f       	add	r30, r30
 4d8:	ff 1f       	adc	r31, r31
 4da:	05 90       	lpm	r0, Z+
 4dc:	f4 91       	lpm	r31, Z
 4de:	e0 2d       	mov	r30, r0
 4e0:	09 94       	ijmp

000004e2 <_exit>:
 4e2:	f8 94       	cli

000004e4 <__stop_program>:
 4e4:	ff cf       	rjmp	.-2      	; 0x4e4 <__stop_program>
